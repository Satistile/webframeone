---
interface Props {
    id: string;
    class: string;
    name: string;
}

const { id, class:className, placeholder, name } = Astro.props;
---

<label id={ id } class={ className }>
    <input type="checkbox" name={ name } />
</label>
<style>
    input {
        vertical-align: top;
        width: 0;
        height: 0;
        appearance: none;
    }
    label {
        vertical-align: top;
        display: inline-block;
        width: 72px;
        height: 44px;
        border-radius: 50px;
        box-shadow: inset 2px 2px 16px -8px #000000;
        position: relative;
        cursor: pointer;
        transition: background-color 0.2s ease-in-out;
    }
    label::before {
        content: "";
        background-color: #F5F5F5FF;
        position: absolute;
        top: 2px;
        left: 2px;
        width: 40px;
        height: 40px;
        border-radius: 50px;
        box-shadow: inset -4px -4px 8px -4px rgba(0, 0, 0, 0.5), inset 4px 4px 8px -4px rgb(255, 255, 255), 0 0 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease-in-out;
    }
    label:has(:checked)::before {
        transform: translateX(28px);
    }
    label:has(:checked) {
        background-color: var(--accent);
    }
    label:focus-within {
        outline: solid;
    }
    @media (prefers-color-scheme: dark) {
        label {
            box-shadow: inset 0 0 16px -8px #ffffff;
        }
        label::before {
            background-color: #3A3A3AFF;
            box-shadow: inset -4px -4px 8px -4px rgb(0, 0, 0), inset 4px 4px 8px -4px rgba(255, 255, 255, 0.8);
        }
    }
</style>