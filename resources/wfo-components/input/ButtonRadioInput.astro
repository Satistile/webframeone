---
interface Props {
    id: string;
    class: string;
    name: string;
    value: string;
    placeholder: string;
}

const { id, class:className, name, value, placeholder } = Astro.props;
---

<label id={ id } class={ className }>
    <input type="radio" value={ value } name={ name } />
    { placeholder }
</label>
<style>
    input {
        width: 0;
        height: 0;
        position: absolute;
        appearance: none;
    }
    label {
        height: 20px;
        position: relative;
        font-size: var(--font-size);
        text-decoration: none;
        color: inherit;
        cursor: pointer;
        padding: 12px 24px 12px 24px;
        margin: 0;
        border: none;
        border-radius: 50px;
        background-color: #F5F5F5FF;
        box-shadow: inset -4px -4px 8px -4px rgba(0, 0, 0, 0.5), inset 4px 4px 8px -4px rgb(255, 255, 255), 0 0 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
        display: inline-block;
    }
    label:has(:checked), label:focus-within {
        box-shadow: inset -4px -4px 8px -4px rgba(0, 0, 0, 0.5), inset 4px 4px 8px -4px rgb(255, 255, 255), 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 2px #000000;
    }
    @media (prefers-color-scheme: dark) {
        label {
            background-color: #3A3A3AFF;
            box-shadow: inset -4px -4px 8px -4px rgb(0, 0, 0), inset 4px 4px 8px -4px rgba(255, 255, 255, 0.8), 0 0 4px -1px rgb(255, 255, 255);
        }
        label:has(:checked), label:focus-within {
            box-shadow: inset -4px -4px 8px -4px rgba(0, 0, 0, 0.5), inset 4px 4px 8px -4px rgb(255, 255, 255), 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 2px #FFFFFF;
        }
    }
    label:hover {
        transform: scale(1.025);
    }
</style>